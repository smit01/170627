1.  環境設定


1-1	以系統管理員身份啟動「記事本」，
	修改 C:\Windows\System32\drivers\etc\hosts 以模擬 DNS 設定
	確定內容有以下三列，且各列的開頭不是 #，否則會變成註解說明文字
127.0.0.1 localhost
127.0.0.1 www.beauty.com
127.0.0.1 www.monster.com


1-2	建立一個新的空白網站，名稱: Lab_SOP
	<Hint> 檔案 | 新增 | 網站 


1-3	將 Lab_SOP 資料夾的檔案(含資料夾)全部複製貼入新建好的空白網站。


1-4	滑鼠右鍵 GetProductJson.ashx | 在瀏覽器中檢視，記下網址的埠號。
	http://localhost:51991/GetProductJson.ashx
	<Note>上述的 51991 即是埠號。

1-5	本文件（與整個專案）的 51991 ，全部替換成你剛才記下的埠號。
	<Note>按 Ctrl + H 可全部更換，範圍請選現行專案。

1-6	用「記事本」開啟：我的文件\Visual Studio 2015\Projects\<ProjectName>\.vs\config\applicationhost.config
	搜尋:
<binding protocol="http" bindingInformation="*:51991:localhost" />


1-7	在上述那行之下，加上新的一行:
<binding protocol="http" bindingInformation="*:51991:*" />


1-8	停止 IISExpress
	<Hint>請留意桌面右下角的通知區域。


1-9	以系統管理員身份啟動「命令列字元」，輸入下列指令：
netsh http add urlacl url=http://*:51991/ user=everyone




2.  試用 Server 端各支程式，觀察程式執行結果。


2-1 開啟 GetProductJson.aspx，執行程式時，代入 Query String: id=1，例如:
    http://localhost:51991/GetProductJson.ashx?id=1


2-2 開啟 GetProductJsonp.ashx，執行程式時，除了代入 Query String: id=1
    再加上 callback=MyCallback 參數，例如:
    http://localhost:51991/GetProductJsonP.ashx?id=1&callback=MyCallback


2-3 將 callback 的參數值改成 DataArrived 參數，例如:
    http://localhost:51991/GetProductJsonP.ashx?id=1&callback=DataArrived


2-4 請想想看，如果將上述 2-3 的網址當成 <script> 元素的 src 屬性，
    取回的文字內容會被瀏覽器視同是程式，是否就相當於呼叫 DataArrived() 函式。




3.  體驗 Same Origin Policy 限制。


3-1 開啟 GetDataFromServer_31.html，觀察 $.get() 那行的寫法(網址採用相對路徑)，
    執行程式，將 localhost 改成 www.beauty.com
    點按「Refresh」按鈕，觀察可否取得最新庫存量。


3-2 開啟 GetDataFromServer_32.html，觀察 $.get() 那行的寫法現在改採絕對路徑:
    $.get('http://www.monster.com:51991/GetProductJson.ashx?id=' + sID, DataArrived);
    執行程式，將 localhost 改成 www.beauty.com
    點按「Refresh」按鈕，觀察可否取得最新庫存量。(幾乎一樣的程式，為何這次不行呢?)


3-3 開啟 GetDataFromServer_33.html，
    請觀察並說明程式的作法:
	<script type="text/javascript">
		$("#btnRefresh").click(btnRefresh_click);

		function btnRefresh_click() {
			var script = document.createElement('script');
			script.src = 'http://www.monster.com:51991/GetProductJsonP.ashx?id=1&callback=DataArrived';
		    script.type = 'text/javascript';
		    document.getElementsByTagName('head')[0].appendChild(script);
		}

		function DataArrived(data) {
			$("#txtUnitsInStock").val(data.UnitsInStock);
		}
	</script>
    執行程式時，確定 localhost 已改成 www.beauty.com
    點按「Refresh」按鈕，觀察可否取得最新庫存量。


3-3 開啟 GetDataFromServer_34.html，
    請觀察並說明程式的作法:

	<script type="text/javascript">
		$("#btnRefresh").click(btnRefresh_click);

		function btnRefresh_click() {
			$.ajax({
			    url: "http://www.monster.com:51991/GetProductJsonP.ashx",
				type: "get",
		        dataType: 'jsonp',
				data: {id: 1},
		        jsonp: 'callback',
		        jsonpCallback: 'DataArrived',
			});
		}

		function DataArrived(data) {
			$("#txtUnitsInStock").val(data.UnitsInStock);
		}
	</script>

    執行程式時，確定 localhost 已改成 www.beauty.com
    點按「Refresh」按鈕，觀察可否取得最新庫存量。




4.  Cross Domain Sharing


4-1 開啟 GetProductJson.ashx，去除 header 那行的註解。
    context.Response.Headers.Add("Access-Control-Allow-Origin", "*");

    
4-2 開啟 GetDataFromServer_32.html，再次確認 $.get() 的寫法是絕對路徑
    點按「Refresh」按鈕，觀察可否取得最新庫存量。

